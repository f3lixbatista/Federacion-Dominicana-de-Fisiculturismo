<%- include("template/cabecera", {tituloWeb: "Seleccion de Categoria"}) %>

<div class="container divGralDetIns border border-primary border-3 mb-2">

    <form id="formularioEditar" class="row g-3 needs-validation was-validated" data-id="<%= atleta.id %>">
              
        <% if (error) { %>
            <p>   
                <%= mensaje %> 
            </p>
            <a href="/inscripcion" class="btn btn-warning btn-block">Volver a Inscripcion</a>
        <% } %>
        <% if (!error) { %>

                <h6 class="position-relative mt-5 opacity-25">Del Atleta</h6>
                    
                <div class="col-md-2 py-0 pt-0 mt-4">
                    <label for="idfdff" class="form-label">ID-FDFF</label>
                    <input value="<%= atleta.IDFDFF %>" type="number" class="form-control" id="idfdff" name="IDFDFF" required="">
                    <div class="invalid-tooltip">
                      ID de la Federacion (FDFF)
                    </div>
                </div>

                
                <div class="col-md-3 pt-0 mt-4">
                    <label for="nombre" class="form-label">Nombre(s) y Apellido(s)</label>
                    <input value="<%= atleta.Nombre %>" type="text" class="form-control" name="Nombre" id="nombre" required="">
                    <div class="invalid-tooltip">
                      Segun Documento de Identidad
                    </div>
                  </div>


                    <!-- <div class="col-md-5 py-0 pt-0 m-0 invisible">
                      <label for="validationTooltip05" class="form-label">Fecha</label>
                      <button class="form-control" name="invi" id="validationTooltip05" required=""> </button>
                    </div> -->
                    <div class="col-md-4 py-0 pt-0 m-0 invisible">
                        <label for="validationTooltip05" class="form-label">Fecha</label>
                        <button class="form-control" name="invi" id="validationTooltip05" required=""> </button>
                      </div>

                    <div class="col-md-3 py-0 pt-0 mb-1">
                        <label for="fechaActual" class="form-label">Fecha</label>
                        <input value="<%= Date() %>" class="form-control" name="FechaActual" id="fechaActual">
                        <div class="invalid-tooltip">
                            Fecha Actual
                        </div>
                    </div>
                    


                    <div class="col-md-2 py-0 pt-0 mt-4">
                        <label for="cedula" class="form-label">Cedula</label>
                        <input value="<%= atleta.Cedula %>" type="number" class="form-control" name="Cedula" id="cedula" required="">
                        <div class="invalid-tooltip">
                          Numero de Cedula 
                        </div>
                    </div>

                    <div class="col-md-2 py-0 pt-0 my-4">
                        <label for="fechaNacimiento" class="form-label">Fecha de Nacimiento</label>
                        <input value="<%= atleta.Nacimiento %>" type="text" class="form-control" name="Nacimiento" id="fechaNacimiento" required="">
                        <div class="invalid-tooltip">
                            Fecha de Nacimiento
                        </div>
                    </div>

                    <div class="col-md-1 py-0 pt-0 my-4">
                        <label for="edad" class="form-label">Edad</label>
                        <input value="" type="datetime" class="form-control" name="Edad" id="edad">
                        <div class="invalid-tooltip">
                            Edad en Años
                        </div>
                    </div>

                    <!-- <div class="idedad"><h1 id="edad"></h1></div> -->

                    <div class="col-md-1 py-0 pt-0 my-4">
                        <label for="sexo" class="form-label">Sexo</label>
                        <input value="<%= atleta.Sexo %>" type="text" class="form-control" name="Sexo" id="sexo" required="">
                        <div class="invalid-tooltip">
                            Sexo
                        </div>
                    </div>



                    <div class="col-md-3 py-0 pt-0 my-4">
                        <label for="sector" class="form-label">Sector/Barrio</label>
                        <input value="<%= atleta.Sector %>" type="text" class="form-control" name="Sector" id="sector" required="">
                        <div class="invalid-tooltip">
                            Sector o Barrio de Residencia
                        </div>
                    </div>

                    <div class="col-md-3 py-0 pt-0  my-4">
                        <label for="preparador" class="form-label">Preparador</label>
                        <input value="<%= atleta.Preparador %>" type="text" class="form-control" name="Preparador" id="preparador" required="">
                        <div class="invalid-tooltip">
                            Entrendor o Coach
                        </div>
                    </div>

                    <div class="col-md-1 py-0 pt-0  my-4" id="divPeso">
                        <label for="peso" class="form-label">Peso en Kilos</label>
                        <input value="" type="number" step="0.01" min="0" class="form-control" name="Peso" id="peso">
                        <div class="invalid-tooltip">
                            Peso en Kilos
                        </div>
                    </div>

                    <div class="col-md-2 py-0 pt-0  my-4" id="divEstaturaBB">
                        <label for="estaturaBB" class="form-label">Estatura en Centimetros</label>
                        <input value="" type="number" step="0.01" min="0" class="form-control" name="Estatura" id="estaturaBB">
                        <div class="invalid-tooltip">
                            Estatura en Centimetros
                        </div>
                    </div>

                    <div class="col-md-2 py-0 pt-0  my-4" id="divEstaturaMPH">
                        <label for="estaturaMPH" class="form-label">Estatura en Centimetros</label>
                        <input value="" type="number" step="0.01" min="0" class="form-control" name="Estatura" id="estaturaMPH">
                        <div class="invalid-tooltip">
                            Estatura en Centimetros
                        </div>
                    </div>

                    <div class="col-md-2 py-0 pt-0  my-4" id="divEstaturaMuscular">
                        <label for="estaturamuscular" class="form-label">Estatura en Centimetros</label>
                        <input value="" type="number" step="0.01" min="0" class="form-control" name="Estatura" id="estaturamuscular">
                        <div class="invalid-tooltip">
                            Estatura en Centimetros
                        </div>
                    </div>

                    <div class="col-md-2 py-0 pt-0  my-4" id="divEstaturaBKN">
                        <label for="estaturabkn" class="form-label">Estatura en Centimetros</label>
                        <input value="" type="number" step="0.01" min="0" class="form-control" name="Estatura" id="estaturabkn">
                        <div class="invalid-tooltip">
                            Estatura en Centimetros
                        </div>
                    </div>

                    <div class="col-md-2 py-0 pt-0  my-4" id="divEstaturaWell">
                        <label for="estaturawell" class="form-label">Estatura en Centimetros</label>
                        <input value="" type="number" step="0.01" min="0" class="form-control" name="Estatura" id="estaturawell">
                        <div class="invalid-tooltip">
                            Estatura en Centimetros
                        </div>
                    </div>

                    <div class="col-md-2 py-0 pt-0  my-4" id="divEstaturaBdf">
                        <label for="estaturabdf" class="form-label">Estatura en Centimetros</label>
                        <input value="" type="number" step="0.01" min="0" class="form-control" name="Estatura" id="estaturabdf">
                        <div class="invalid-tooltip">
                            Estatura en Centimetros
                        </div>
                    </div>

                    <div class="col-md-2 py-0 pt-0  my-4" id="divEstaturaWph">
                        <label for="estaturawph" class="form-label">Estatura en Centimetros</label>
                        <input value="" type="number" step="0.01" min="0" class="form-control" name="Estatura" id="estaturawph">
                        <div class="invalid-tooltip">
                            Estatura en Centimetros
                        </div>
                    </div>

            <button class="btn btn-primary btn-md mt-5 mb-4 col-1 mx-2 p-1" id="btnbb" type="button">Culturismo</button>
            <button class="btn btn-primary btn-md mt-5 mb-4 col-1 mx-2" id="btnbikini" type="button">Bikini</button>     
            <button class="btn btn-warning btn-md mt-5 mb-4 col-1 mx-2 p-0 fw-bold" style="font-size: 0.9vw" id="btnmph" type="button">Men's Physique</button> 
            <button class="btn btn-warning btn-md mt-5 mb-4 col-1 mx-2 p-0 fw-bold" style="font-size: 0.8vw" id="btnwomenph" type="button">Women’s Physique</button>  
            <button class="btn btn-success btn-md mt-5 mb-4 col-1 mx-2" id="btnwellness" type="button">Wellness</button>
            <button class="btn btn-dark btn-md mt-5 mb-4 col-1 mx-2 p-1" id="btnbdf" type="button">Bodyfitness</button>     
            <button class="btn btn-success btn-md mt-5 mb-4 col-1 mx-2" id="btnmusc" type="button">Muscular</button>   
            <button class="btn btn-danger btn-md mt-5 mb-4 col-1 mx-2" id="btnPrint" type="submit"><a href="/inscripcion">Inscribir</a></button>  
          
            <div class="container mt-5 col-12" id="allCategorias">
                
                <% if (arrayCategorias.length > 0) { %>
                    <% arrayCategorias.forEach(categoria => { %>
                 
                        <div style="display: none" class="row" id="divCategoria"> 
                            <hr id="hrCategoria" class="col-11 mx-2"> 
                            <div class="col-12 p-0 m-0 form-check"> 
                                 
                                <label id="labelCategoria" class="mx-4 form-check-label lh-1 fs-4 col-9 p-0" for="checkCategoria"><b><p class="lh-1"><%= categoria.Categoria %></p></b></label>
                            
                                <input role="" aria-label="Checkbox for following text input" value="<%= categoria.Categoria %>" class="valores form-check-input fs-4 p-0 mt-0 mb-0 form-check-reverse  col-1" name="Categoria" type="checkbox" id="checkCategoria" data-datadisciplina="<%= categoria.Disciplina %>" data-id="<%= categoria.id %>" data-datadivision="<%= categoria.Division %>" data-datamodal="<%= categoria.Modalidad %>" data-genero="<%= categoria.Genero %>" data-paredad='<%= categoria.HastaEdad %>' data-pardesdeedad='<%= categoria.DesdeEdad %>' data-pardesdepeso='<%= categoria.DesdePeso %>' data-parhastapeso='<%= categoria.HastaPeso %>' data-pardesdeestatura='<%= categoria.DesdeEstatura %>' data-parhastaestatura='<%= categoria.HastaEstatura %>'>
                                <input role="" aria-label="Checkbox for following text input" value="<%= categoria.id %>" class="valores form-check-input fs-4 p-0 mt-0 mb-0 form-check-reverse  col-1" name="id" type="checkbox" id="checkCategoria1">

                            </div>  
                            
                        </div>                   
                    <% }) %>
                <% } %>
                <hr class="lg-2 mr-5 pt-0 mt-0">
            </div>
        <% } %> 
    </form>
</div>

<div id="imprimir" class="imprimirDescargo">

<h3 class="text-center">Documento de descargo y consentimiento</h3>
<h3 class="text-center">Convenio de participación en el</h3>
<h1 class="text-center fw-bold">XI MR REGION NORTE 2022</h1>
<h5 class="text-center">Santiago de los 30 Caballeros, 03 y 04 de diciembre 2022</h5>
<p class="text-center">Por favor lea detenidamente este documento</p>
<P>
    Para poder participar como competidor en este evento, como firmante de este documento afirmo que entiendo y estoy de acuerdo con la constitución y las reglas de la IFBB/FDFF-El código de ética de la IFBB/FDFF y las reglas antidopajes de la IFBB/FDFF. También acuerdo cooperar con la IFBB/FDFF y los organizadores del evento.  
</P>
<p class="fw-bold">Entiendo, acepto y concuerdo con las siguientes condiciones:</p>
<p>
    1- Entiendo que para poder participar en este evento como competidor debo estar de acuerdo con todas las partes de este documento y que lo hago de manera voluntaria.
</p>
<p>
    2- Que concuerdo en descargar a la federación de cualquier reclamación que tenga ahora o en un futuro sobre este evento y acuerdo nunca proceder legalmente contra la federación o el organizador de este evento, ni contra jueces, patrocinadores, colaboradores, hotel y su staff, por daños personales, muerte o daños a mi propiedad, gastos o perdida durante mi participación en el evento, dado por cualquier causa incluyendo pero no limitándose a negligencia y/o aplicación de los estatutos por parte de la federación.
</p>
<p>
    3- Confirmo que estoy en buen estado de salud física y mental a la vez que entiendo que cualquier daño médico o personal en mi persona, mientras compito en este evento, es totalmente mi responsabilidad, tanto por el daño, como por el pago de cualquier gasto que pueda incurrir por el requerimiento de asistencia médica, y libero a los organizadores y a la federación de la cobertura económica que provenga de ello. 
</p>
<p>
    4- Con este documento afirmo que nadie me obligó a participar en este evento y que lo hago por voluntad propia.
</p>
<p>
    5- Acuerdo que voy a respetar las reglas de la IFBB/FDFF y que entiendo que si participo en 
    competencias no avalados por la federación, soy pasible de ser sometido apruebas de dopaje, sin previo aviso, siendo esta prueba costeada por mi persona y que debo resarcir a la federación, antes de volver a competir en un evento IFBB/FDFF, nacional o internacional. 
</p>
<p>
    6- Apruebo que cualquier foto o video que me sean tomadas durante el evento, por fotógrafos 
acreditados por la federación, podrán ser utilizadas en por la federación, sin requerir el pago por derecho.
</p>
<p>
    7- Confirmo que soy mayor de edad y que he leído, entendido y aceptado todas las partes de este documento, antes de firmarlo, y sé que este documento estará disponible para cualquier miembro, juez o colaborador de la federación, en el momento que sea necesario.
</p>

<div class="row pb-0 mb-0 mt-0 pt-0">
    <label for="descNombre" class="col-sm-2 col-form-label pb-0 mb-0">NOMBRE:</label>
    <div id="divdescNombre" class="col-sm-10 pl-0 pb-0 mb-0">
        <input type="text" id="descNombre" name="NombreEvento" value="<%= atleta.Nombre %>" class="border-0 fs-5 fw-bold col-10 bg-white pl-0" readonly>
    </div>
</div>
<div class="row pb-0 mb-0 mt-0 pt-0">
    <label for="descCedula" class="col-sm-2 col-form-label pt-0 pb-0 mt-0 mb-0">CEDULA/PASAPORTE:</label>
    <div id="divdescCedula" class="col-sm-10 pl-0 pb-0 mb-0 mt-0 pt-0">
        <input type="text" id="descCedula" name="NombreEvento" value="<%= atleta.Cedula %>" class="border-0 fs-5 fw-bold col-10 bg-white pl-0" readonly>
    </div>
</div>
<div class="row pb-0 mb-0 mt-0 pt-0">
    <label for="descCity" class="col-sm-2 col-form-label pt-0 pb-0 mt-0 mb-0">PAIS/CIUDAD:</label>
    <div id="divdescCity" class="col-sm-10 pl-0 pb-0 mb-0 mt-0 pt-0">
        <input type="text" id="descCity" name="NombreEvento" value="<%= atleta.Sector %>" class="border-0 fs-5 fw-bold col-10 bg-white pl-0" readonly>
    </div>
</div>
<div class="row pb-0 mb-0 mt-0 pt-0">
    <label for="descTel" class="col-sm-2 col-form-label pt-0 pb-0 mt-0 mb-0">TELEFONO:</label>
    <div id="divdescTel" class="col-sm-10 pl-0 pb-0 mb-0 mt-0 pt-0">
        <input type="text" id="descTel" name="NombreEvento" value="<%= atleta.Celular %>" class="border-0 fs-5 fw-bold col-10 bg-white pl-0" readonly>
    </div>

</div>
<div class="row mb-1 mt-0 pt-0">
    <label for="descParam" class="col-sm-2 col-form-label pt-0 mt-0">PESO/ESTATURA/EDAD:</label>
    <div id="divdescParam" class="col-sm-10 pl-0 pb-0 mb-0 mt-0 pt-0">
        <input type="text" id="descParam" name="NombreEvento" value="" class="border-0 fs-5 fw-bold col-10 bg-white pl-0" readonly>
    </div>
</div>
<div class="row mb-0 mt-0 pt-0">
    <label for="" class="col-sm-1 col-form-label pt-0 mt-0">CATEGORIA(S):</label>
  <div id="divCatDes" class="mt-0 pt-0 col-10">

  </div>
</div>
<p>Como Atleta consciente de mi responsabilidad, afirmo que conozco y estoy de acuerdo de haberme inscrito en la(s) categoría(s) antes descrita</p><br>
<div class="row pb-o mb-0">
    <p class="col-6 text-center pb-o mb-0">_______________________________________</p>
    <p class="col-6 text-center pb-o mb-0">_______________________________________</p>
</div>
<div class="row mb-3 pt-0 mt-0">
    <p class="col-6 text-center pt-0 mt-0">Firma del Atleta</p>
    <p class="col-6 text-center pt-0 mt-0">Firma de Juez de Pesaje</p>
</div>






</div>
  
        <!-- <H4 class="mb-2">
            Firma de Atleta_______________________________________<span class="fs-6">Con esta firma certifico que no tengo antecedentes penales ni asuntos pendientes con la justicia</span>
        </H4>     -->

<%- include("template/footer") %>

<script>

            divEstaturaMPH.style.display = "none";
            btnPrint.style.display = "none";
            divPeso.style.display = "none";
            divEstaturaBB.style.display = "none";

            divEstaturaMuscular.style.display = "none";
            divEstaturaBKN.style.display = "none";
            divEstaturaWell.style.display = "none";
            divEstaturaBdf.style.display = "none";
            divEstaturaWph.style.display = "none";

            btnbb.style.display = "none";
            btnbikini.style.display = "none";
            btnmph.style.display = "none";
            btnwomenph.style.display = "none";
            btnwellness.style.display = "none";
            btnbdf.style.display = "none";
            btnmusc.style.display = "none";

    const fechaNacimiento = document.getElementById("fechaNacimiento");

    const fechaActual = new Date();
    const anoActual = parseInt(fechaActual.getFullYear());
    const mesActual = parseInt(fechaActual.getMonth()) + 1;
    const diaActual = parseInt(fechaActual.getDate());

    const fechaPartes = fechaNacimiento.value.split(' ')
    const anoNacimiento = fechaPartes[3];
    const mesNacimientoText = fechaPartes[1];
    const diaNacimiento = fechaPartes[2];

    const meses = ['Ano', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    const mesNacimiento = meses.findIndex((elemento) => elemento === mesNacimientoText);
  
    let edad = anoActual - anoNacimiento;
    if (mesActual < mesNacimiento) {
        edad--;
    } else if (mesActual === mesNacimiento) {
        if (diaActual < diaNacimiento) {
            edad--;
        }
    }

    let edadJunior = anoActual - anoNacimiento;
//---------------------------------------------------- Boton Culturismo -----------------------------------------------------------       
    const botonCulturismo = document.getElementById("btnbb")
    botonCulturismo.addEventListener('click', function() {

        divPeso.style.display = "block";
        divEstaturaBB.style.display = "block";

            btnbb.style.display = "none";
            btnbikini.style.display = "none";
            btnmph.style.display = "none";
            btnwomenph.style.display = "none";
            btnwellness.style.display = "none";
            btnbdf.style.display = "none";
            btnmusc.style.display = "none";

            divEstaturaMPH.style.display = "none";
            divEstaturaMuscular.style.display = "none";
            divEstaturaBKN.style.display = "none";
            divEstaturaWell.style.display = "none";
            divEstaturaBdf.style.display = "none";
            divEstaturaWph.style.display = "none";

    })
//---------------------------------------------------- Campo Peso culturismo -----------------------------------------------------------       
    const inputpeso = document.getElementById("peso")
    inputpeso.addEventListener('keyup', function() {
         
            
        for (let index = 0; index < checkCategoria.length; index++) {
             
            let pesoInicial = parseInt(checkCategoria[index].dataset.pardesdepeso)
            let pesoFinal = parseInt(checkCategoria[index].dataset.parhastapeso)
            let pesoAtleta = peso.value
    
            let modal = checkCategoria[index].dataset.datamodal
            let division = checkCategoria[index].dataset.datadivision
            let disciplina = checkCategoria[index].dataset.datadisciplina
    
            let edadInicial = parseInt(checkCategoria[index].dataset.pardesdeedad)
            let edadFinal = parseInt(checkCategoria[index].dataset.paredad)
            let edadAtleta = edad
    
            let estaturaInicial = parseInt(checkCategoria[index].dataset.pardesdeestatura)
            let estaturaFinal = parseInt(checkCategoria[index].dataset.parhastaestatura)
            let estaturaAtleta = estaturaBB.value
    
            let genero = checkCategoria[index].dataset.genero
            let generoAtleta = sexo.value
            estaturaBB.value = ""
            divCategoria[index].style.display = 'none';

            if (disciplina == "Men's Physique" || disciplina == "Muscular Men's Physique" || disciplina == "Men's Fitness" || disciplina == "Men's Fit-Model") {
                divCategoria[index].style.display = 'none';
            }
            if (disciplina == "Mixed-pairs") {
                divCategoria[index].style.display = 'block';
            }
            //---------------------------------------------------- BB Junior -----------------------------------------------------------
            if (edadJunior < 24 && modal == 'Junior') {
                
                if (disciplina == "Men's Bodybuilding" || disciplina == "Men’s Bodybuilding" || disciplina == "Men's Classic Bodybuilding" || disciplina == "Men's Games Classic" || disciplina == "Men's Classic Physique") {     
                    console.log(pesoInicial)
                    if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) { 
                        if (pesoInicial && pesoInicial < pesoAtleta && pesoFinal >= pesoAtleta || isNaN(pesoInicial)) {
                            divCategoria[index].style.display = 'block'; 
                        }else{
                            divCategoria[index].style.display = 'none';
                        }
                        // if (isNaN(pesoInicial)) {
                        //     divCategoria[index].style.display = 'block';
                        // }
                    }
                }
            }
            //---------------------------------------------------- BB Sr -----------------------------------------------------------       
            if (generoAtleta == 'M' && genero == 'M' && pesoInicial < pesoAtleta && pesoFinal >= pesoAtleta && modal == 'Senior') {
                 divCategoria[index].style.display = 'block';  
                 
            }

                //---------------------------------------------------- master BB ----------------------------------------------------------
            if (edad > 39 && modal == 'Master') {
                
                if (disciplina == "Men’s Bodybuilding") {
                     
                    if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) { 
                       
                        if (pesoInicial < pesoAtleta && pesoFinal >= pesoAtleta) {
                            divCategoria[index].style.display = 'block';
                            console.log(pesoInicial, pesoFinal, pesoAtleta)
                        }
                        if (isNaN(pesoInicial)) {
                            divCategoria[index].style.display = 'block';
                        }
                    }
                }
            }
        }
        btnPrint.style.display = "block";
    })
//---------------------------------------------------- Campo Estatura culturismo -----------------------------------------------------------       
    const inputestatura = document.getElementById("estaturaBB")
    inputestatura.addEventListener('keyup', function() {
      
        if (peso.value == "") {
            alert("Debe ingresar el peso del atleta");
        }
                
        for (let index = 0; index < checkCategoria.length; index++) {
            
            let pesoInicial = parseInt(checkCategoria[index].dataset.pardesdepeso)
            let pesoFinal = parseInt(checkCategoria[index].dataset.parhastapeso)
            let pesoAtleta = peso.value
    
            let modal = checkCategoria[index].dataset.datamodal
            let division = checkCategoria[index].dataset.datadivision
            let disciplina = checkCategoria[index].dataset.datadisciplina
    
            let edadInicial = parseInt(checkCategoria[index].dataset.pardesdeedad)
            let edadFinal = parseInt(checkCategoria[index].dataset.paredad)
            let edadAtleta = edad
    
            let estaturaInicial = parseInt(checkCategoria[index].dataset.pardesdeestatura)
            let estaturaFinal = parseInt(checkCategoria[index].dataset.parhastaestatura)
            let estaturaAtleta = estaturaBB.value
    
            let genero = checkCategoria[index].dataset.genero
            let generoAtleta = sexo.value

            estaturabdf.removeAttribute('name');
                estaturawell.removeAttribute('name');
                estaturawph.removeAttribute('name');
                estaturabkn.removeAttribute('name');
                estaturamuscular.removeAttribute('name');
                estaturaMPH.removeAttribute('name');
                    
            if (estaturaAtleta.length >= 3) {
                    btnPrint.style.display = "block";    
                }
            
            if (disciplina == "Men's Physique" || disciplina == "Muscular Men's Physique" || disciplina == "Men's Fitness" || disciplina == "Men's Fit-Model") {
                divCategoria[index].style.display = 'none';
            }
         
            if (estaturaAtleta.length < 3 && disciplina != "Men’s Bodybuilding" && disciplina != "Mixed-pairs") {
                divCategoria[index].style.display = 'none';     
            }
            //---------------------------------------------------- Categorias Jr. Classsic -----------------------------------------------------------       
            if (edadJunior < 24 && modal == 'Junior') {
               
                if (disciplina == "Men’s Classic Bodybuilding" || disciplina == "Games Classic" || disciplina == "Classic Physique") {     
                    if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) { 
                        if (estaturaAtleta.length < 3) {
                            divCategoria[index].style.display = 'none'; 
                        }
                         if (!isNaN(estaturaInicial)) {
                            if (estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta) {
                        //    --------------------------------------------------------- Junior classic BB Open---------------------------------------------------------------               
                        if (disciplina == "Men’s Classic Bodybuilding") {
                            divCategoria[index].style.display = 'none';
                                if (estaturaAtleta <= 168 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 168 && estaturaAtleta <= 171 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 1) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 171 && estaturaAtleta <= 175 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 175 && estaturaAtleta <= 180 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 180 && estaturaAtleta <= 188 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 5) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 188 && estaturaAtleta <= 196 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 196 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                                divCategoria[index].style.display = 'block';
                            }
                        } 
        //--------------------------------------------------------- Junior Games classic Open---------------------------------------------------------------
               
                if (estaturaAtleta <= 162 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) - 3) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 162 && estaturaAtleta <= 165 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) - 2) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 165 && estaturaAtleta <= 168 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) - 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 3) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 5) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
        //---------------------------------------------------- Classic Physique Jr -----------------------------------------------------------
                if (estaturaAtleta <= 168 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 3) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 8) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 9) {
                    divCategoria[index].style.display = 'block'; 
                    }
                 }     
                        }   
                        else{
            //--------------------------------------------------------- Junior classic BB Open---------------------------------------------------------------               
                        if (disciplina == "Men’s Classic Bodybuilding") {
                            divCategoria[index].style.display = 'none';
                            if (estaturaAtleta <= 168 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 168 && estaturaAtleta <= 171 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 1) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 171 && estaturaAtleta <= 175 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 175 && estaturaAtleta <= 180 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 180 && estaturaAtleta <= 188 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 5) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 188 && estaturaAtleta <= 196 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                                divCategoria[index].style.display = 'block';
                            }
                            if (estaturaAtleta > 196 && modal == 'Junior' && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                                divCategoria[index].style.display = 'block';
                            }
                        } 
                //--------------------------------------------------------- Junior Games classic Open---------------------------------------------------------------
                if (disciplina == "Games Classic") {
                
                if (estaturaAtleta.length < 3 && disciplina == "Games Classic") {
                            divCategoria[index].style.display = 'none'; 
                }        
                if (estaturaAtleta <= 162 && pesoAtleta <= (estaturaAtleta - 100) - 3) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 162 && estaturaAtleta <= 165 && pesoAtleta <= (estaturaAtleta - 100) - 2) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 165 && estaturaAtleta <= 168 && pesoAtleta <= (estaturaAtleta - 100) - 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && pesoAtleta <= (estaturaAtleta - 100) + 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && pesoAtleta <= (estaturaAtleta - 100) + 3) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && pesoAtleta <= (estaturaAtleta - 100) + 5) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
                }
        //---------------------------------------------------- Classic Physique Jr -----------------------------------------------------------
                
                if (estaturaAtleta.length < 3) {
                    divCategoria[index].style.display = 'none'; 
                }
                if (estaturaAtleta <= 168 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 3) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 8) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 9) {
                    divCategoria[index].style.display = 'block'; 
                }             
                }       
            }
        }
    }

        //--------------------------------------------------------- Masters Classic---------------------------------------------------------------               

            if (edad > 39 && modal == 'Master') { 
               if (disciplina == "Men’s Classic Bodybuilding" || disciplina == "Games Classic" || disciplina == "Classic Physique") {     
                   if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) { 
                       if (estaturaAtleta.length < 3) {
                           divCategoria[index].style.display = 'none'; 
                        }
                        if (!isNaN(estaturaInicial)) {
                           if (estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta) {
            //---------------------------------------------------- Classic Bodybuilding Master edad -----------------------------------------------------------
                    if (estaturaAtleta <= 168 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                        divCategoria[index].style.display = 'block';                   
                    }
                    if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                        divCategoria[index].style.display = 'block';                    
                    }
                    if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                        divCategoria[index].style.display = 'block';                    
                    }
                    if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                        divCategoria[index].style.display = 'block';                    
                    }
                    if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 9) {
                        divCategoria[index].style.display = 'block';                   
                    }
                    if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 11) {
                        divCategoria[index].style.display = 'block';                    
                    }
                    if (estaturaAtleta > 196 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 13) {
                        divCategoria[index].style.display = 'block';
                    }
//---------------------------------------------------- games Classic Bodybuilding master edad -----------------------------------------------------------
                if (estaturaAtleta <= 162 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) - 2) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 162 && estaturaAtleta <= 165 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) - 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 165 && estaturaAtleta <= 168 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 5) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                    divCategoria[index].style.display = 'block';   
                }
    //---------------------------------------------------- Classic Physique master -----------------------------------------------------------
                if (estaturaAtleta <= 168 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 8) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 11) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 13) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 15) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 17) {
                    divCategoria[index].style.display = 'block'; 
                        }
                    }
                    }else{
           //---------------------------------------------------- Classic Bodybuilding Master edad -----------------------------------------------------------

                    if (estaturaAtleta <= 168 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                        divCategoria[index].style.display = 'block';                   
                    }
                    if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                        divCategoria[index].style.display = 'block';                    
                    }
                    if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                        divCategoria[index].style.display = 'block';                    
                    }
                    if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                        divCategoria[index].style.display = 'block';                    
                    }
                    if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 9) {
                        divCategoria[index].style.display = 'block';
                    }
                    if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 11) {
                        divCategoria[index].style.display = 'block';                   
                    }
                    if (estaturaAtleta > 196 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 13) {
                        divCategoria[index].style.display = 'block';                    
                    }

//---------------------------------------------------- games Classic Bodybuilding master edad -----------------------------------------------------------
                if (estaturaAtleta <= 162 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) - 2) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 162 && estaturaAtleta <= 165 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) - 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 165 && estaturaAtleta <= 168 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 5) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                    divCategoria[index].style.display = 'block';   
                }

    //---------------------------------------------------- Classic Physique master -----------------------------------------------------------
                if (estaturaAtleta <= 168 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 8) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 11) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 13) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 15) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 17) {
                    divCategoria[index].style.display = 'block'; 
                        }
                    }                
                    }
               }
            //---------------------------------------------------- BB Sr -----------------------------------------------------------       
            }

 //---------------------------------------------------- Classic Bodybuilding Sr -----------------------------------------------------------

            if (generoAtleta == 'M' && genero == 'M' && modal == 'Senior') {
                
                if (estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta || isNaN(estaturaInicial)) {

                if (disciplina == "Men’s Classic Bodybuilding") {

                    
                
                if (estaturaAtleta.length < 3) {
                           divCategoria[index].style.display = 'none'; }
                if (estaturaAtleta <= 168 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 9) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 11) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Men’s Classic Bodybuilding" && pesoAtleta <= (estaturaAtleta - 100) + 13) {
                    divCategoria[index].style.display = 'block';   
                }
            }
 //---------------------------------------------------- games Classic Bodybuilding Sr -----------------------------------------------------------
                
                 if (disciplina == "Games Classic") {
                    if (estaturaAtleta.length < 3) {
                        divCategoria[index].style.display = 'none'; 
                    }
 
                if (estaturaAtleta <= 162 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) - 2) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 162 && estaturaAtleta <= 165 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) - 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 165 && estaturaAtleta <= 168 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 0) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 1) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && pesoAtleta <= (estaturaAtleta - 100) + 2) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 5) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Games Classic" && pesoAtleta <= (estaturaAtleta - 100) + 7) {
                    divCategoria[index].style.display = 'block';   
                }
            }
        //---------------------------------------------------- Classic Physique Sr -----------------------------------------------------------
                if (estaturaAtleta <= 168 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 4) {
                    divCategoria[index].style.display = 'block';  
                }
                if (estaturaAtleta > 168 && estaturaAtleta <= 171 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 6) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 171 && estaturaAtleta <= 175 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 8) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 175 && estaturaAtleta <= 180 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 11) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 180 && estaturaAtleta <= 188 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 13) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 188 && estaturaAtleta <= 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 15) {
                    divCategoria[index].style.display = 'block';   
                }
                if (estaturaAtleta > 196 && disciplina == "Classic Physique" && pesoAtleta <= (estaturaAtleta - 100) + 17) {
                    divCategoria[index].style.display = 'block';   
                }   
            } 
        }
        }
    })
//---------------------------------------------------- Boton Men's Physique -----------------------------------------------------------       
    const botonmph = document.getElementById("btnmph")
    botonmph.addEventListener('click', function() {

        divEstaturaMPH.style.display = "block";
        divPeso.style.display = "none";
        divEstaturaBB.style.display = "none";
             
            btnbb.style.display = "none";
            btnbikini.style.display = "none";
            btnmph.style.display = "none";
            btnwomenph.style.display = "none";
            btnwellness.style.display = "none";
            btnbdf.style.display = "none";
            btnmusc.style.display = "none";

            divEstaturaMuscular.style.display = "none";
            divEstaturaBKN.style.display = "none";
            divEstaturaWell.style.display = "none";
            divEstaturaBdf.style.display = "none";
            divEstaturaWph.style.display = "none";

    })
//---------------------------------------------------- Campo Estatura Men's Physique -----------------------------------------------------------       
    const inputestaturaMPH = document.getElementById("estaturaMPH")
    inputestaturaMPH.addEventListener('keyup', function() {
        for (let index = 0; index < checkCategoria.length; index++) {
                
                let pesoInicial = parseInt(checkCategoria[index].dataset.pardesdepeso)
                let pesoFinal = parseInt(checkCategoria[index].dataset.parhastapeso)
                let pesoAtleta = peso.value
    
                let modal = checkCategoria[index].dataset.datamodal
                let division = checkCategoria[index].dataset.datadivision
                let disciplina = checkCategoria[index].dataset.datadisciplina
    
                let edadInicial = parseInt(checkCategoria[index].dataset.pardesdeedad)
                let edadFinal = parseInt(checkCategoria[index].dataset.paredad)
                let edadAtleta = edad
    
                let estaturaInicial = parseInt(checkCategoria[index].dataset.pardesdeestatura)
                let estaturaFinal = parseInt(checkCategoria[index].dataset.parhastaestatura)
                let estaturaAtleta = estaturaMPH.value
    
                let genero = checkCategoria[index].dataset.genero
                let generoAtleta = sexo.value

                estaturabdf.removeAttribute('name');
                estaturawell.removeAttribute('name');
                estaturawph.removeAttribute('name');
                estaturabkn.removeAttribute('name');
                estaturamuscular.removeAttribute('name');
                estaturaBB.removeAttribute('name');
                peso.removeAttribute('name');

                if (estaturaAtleta.length < 3) {
                    divCategoria[index].style.display = 'none';     
                }
                if (estaturaAtleta.length >= 3) {
                    btnPrint.style.display = "block";    
                }

                if (disciplina == "Fit-pairs") {
                    divCategoria[index].style.display = 'block';
                }

                //----------------------------------------------------  -----------------------------------------------------------
                if (generoAtleta == 'M' && genero == 'M') {
                
                //--------------------------------------------------------- Junior ---------------------------------------------------------------               
                    if (edadJunior < 24 && modal == 'Junior') {

                        if (disciplina == "Men's Fitness" && division == "Open") {
             
                            if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                               
                                if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                    divCategoria[index].style.display = 'block';
                                } else {
                                    divCategoria[index].style.display = 'block';
                                }
                            }    
                        }

                        if (disciplina == "Men's Physique") {

                            if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                                // console.log(isNaN(estaturaInicial), edadAtleta)
                                if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                    divCategoria[index].style.display = 'block';
                                } if (isNaN(estaturaInicial)) {
                                    divCategoria[index].style.display = 'block';
                                }
                            }  
                        }
                    }
                //---------------------------------------------------- Master -----------------------------------------------------------
                    if (edad > 39 && modal == 'Master') {
                       
                        if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                            if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                divCategoria[index].style.display = 'block';
                            } 
                            
                            if (!estaturaInicial) {
                                divCategoria[index].style.display = 'block';
                            }
                        } 

                    }
                }

                if (!pesoInicial && !edadInicial && !estaturaInicial && genero == generoAtleta) {
                    divCategoria[index].style.display = 'block';
                }

            if (generoAtleta == 'M' && genero == 'M' && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta && modal == 'Senior') {
                divCategoria[index].style.display = 'block';
            } 

            if (disciplina == "Men's Bodybuilding" || disciplina == "Men’s Bodybuilding" || disciplina == "Classic Physique" || disciplina == "Men’s Classic Bodybuilding" || disciplina == "Games Classic" || disciplina == "Mixed-pairs" || disciplina == "Muscular Men's Physique") {
                divCategoria[index].style.display = 'none';
            } 
 
        }

        })   
//---------------------------------------------------- Boton Muscular -----------------------------------------------------------       
    const botonMusc = document.getElementById("btnmusc")
    botonMusc.addEventListener('click', function() {

      
        btnbb.style.display = "none";
            btnbikini.style.display = "none";
            btnmph.style.display = "none";
            btnwomenph.style.display = "none";
            btnwellness.style.display = "none";
            btnbdf.style.display = "none";
            btnmusc.style.display = "none";

            divEstaturaMPH.style.display = "none";
            divPeso.style.display = "none";
            divEstaturaBB.style.display = "none";

            divEstaturaMuscular.style.display = "block";
            divEstaturaBKN.style.display = "none";
            divEstaturaWell.style.display = "none";
            divEstaturaBdf.style.display = "none";
            divEstaturaWph.style.display = "none";

            
    })
//---------------------------------------------------- Campo Estatura Muscular -----------------------------------------------------------       
    const inputestaturaMuscular = document.getElementById("estaturamuscular")
    inputestaturaMuscular.addEventListener('keyup', function() {
        for (let index = 0; index < checkCategoria.length; index++) {              
            let pesoInicial = parseInt(checkCategoria[index].dataset.pardesdepeso)
            let pesoFinal = parseInt(checkCategoria[index].dataset.parhastapeso)
            let pesoAtleta = peso.value
    
            let modal = checkCategoria[index].dataset.datamodal
            let division = checkCategoria[index].dataset.datadivision
            let disciplina = checkCategoria[index].dataset.datadisciplina
    
            let edadInicial = parseInt(checkCategoria[index].dataset.pardesdeedad)
            let edadFinal = parseInt(checkCategoria[index].dataset.paredad)
            let edadAtleta = edad
    
            let estaturaInicial = parseInt(checkCategoria[index].dataset.pardesdeestatura)
            let estaturaFinal = parseInt(checkCategoria[index].dataset.parhastaestatura)
            let estaturaAtleta = estaturamuscular.value
    
            let genero = checkCategoria[index].dataset.genero
            let generoAtleta = sexo.value

            estaturabdf.removeAttribute('name');
                estaturawell.removeAttribute('name');
                estaturawph.removeAttribute('name');
                estaturabkn.removeAttribute('name');
                estaturaMPH.removeAttribute('name');
                estaturaBB.removeAttribute('name');
                peso.removeAttribute('name');

            if (estaturaAtleta.length >= 3) {
                    btnPrint.style.display = "block";    
                }
                if (estaturaAtleta.length < 3) {
                    divCategoria[index].style.display = 'none';     
                }

            if (disciplina == "Muscular Men's Physique") {
                if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                    divCategoria[index].style.display = 'block';
                } if (!estaturaInicial) {
                    divCategoria[index].style.display = 'block';
                }    
            }
        }
    })
//---------------------------------------------------- boton Estatura bikini -----------------------------------------------------------       
    const botonBkn = document.getElementById("btnbikini")
    botonBkn.addEventListener('click', function() {
                
        btnbb.style.display = "none";
            btnbikini.style.display = "none";
            btnmph.style.display = "none";
            btnwomenph.style.display = "none";
            btnwellness.style.display = "none";
            btnbdf.style.display = "none";
            btnmusc.style.display = "none";

            divEstaturaMPH.style.display = "none";
            divPeso.style.display = "none";
            divEstaturaBB.style.display = "none";

            divEstaturaMuscular.style.display = "none";
            divEstaturaBKN.style.display = "block";
            divEstaturaWell.style.display = "none";
            divEstaturaBdf.style.display = "none";
            divEstaturaWph.style.display = "none";

        })
//---------------------------------------------------- Campo Estatura Bikini -----------------------------------------------------------       
    const inputestaturaBKN = document.getElementById("estaturabkn")
    inputestaturaBKN.addEventListener('keyup', function() {
        for (let index = 0; index < checkCategoria.length; index++) {
                
                let pesoInicial = parseInt(checkCategoria[index].dataset.pardesdepeso)
                let pesoFinal = parseInt(checkCategoria[index].dataset.parhastapeso)
                let pesoAtleta = peso.value
    
                let modal = checkCategoria[index].dataset.datamodal
                let division = checkCategoria[index].dataset.datadivision
                let disciplina = checkCategoria[index].dataset.datadisciplina
    
                let edadInicial = parseInt(checkCategoria[index].dataset.pardesdeedad)
                let edadFinal = parseInt(checkCategoria[index].dataset.paredad)
                let edadAtleta = edad
    
                let estaturaInicial = parseInt(checkCategoria[index].dataset.pardesdeestatura)
                let estaturaFinal = parseInt(checkCategoria[index].dataset.parhastaestatura)
                let estaturaAtleta = estaturabkn.value
    
                let genero = checkCategoria[index].dataset.genero
                let generoAtleta = sexo.value

                estaturabdf.removeAttribute('name');
                estaturawell.removeAttribute('name');
                estaturawph.removeAttribute('name');
                estaturamuscular.removeAttribute('name');
                estaturaMPH.removeAttribute('name');
                estaturaBB.removeAttribute('name');
                peso.removeAttribute('name');

                
                if (estaturaAtleta.length < 3) {
                    divCategoria[index].style.display = 'none';     
                }

                if (estaturaAtleta.length >= 3) {
                    btnPrint.style.display = "block";    
                }

                if (disciplina == "Fit-pairs") {
                    divCategoria[index].style.display = 'block';
                }

                //----------------------------------------------------  -----------------------------------------------------------
                if (generoAtleta == 'F' && genero == 'F') {
                
                //--------------------------------------------------------- Junior ---------------------------------------------------------------               
                    if (edadJunior < 24 && modal == 'Junior') {
                            if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                               
                                if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                    divCategoria[index].style.display = 'block';
                                }
                                
                                if (!estaturaInicial) {
                                    divCategoria[index].style.display = 'block';
                                }
                            }    
                    }
                //---------------------------------------------------- Master -----------------------------------------------------------
                    if (edad > 34 && modal == 'Master') {
                       
                        if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                            if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                divCategoria[index].style.display = 'block';
                            } 
                            
                            if (!estaturaInicial) {
                                divCategoria[index].style.display = 'block';
                            }
                        } 

                    }
                }

                if (!pesoInicial && !edadInicial && !estaturaInicial && genero == generoAtleta) {
                    divCategoria[index].style.display = 'block';
                }

            if (generoAtleta == 'F' && genero == 'F' && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta && modal == 'Senior') {
                divCategoria[index].style.display = 'block';
            } 

            if (disciplina == "Women's Wellness" || disciplina == "Women's Bodyfitness" || disciplina == "Women’s Physique" || disciplina == "Mixed-pairs" || disciplina == "Women’s Acrobatic Fitness") {
                divCategoria[index].style.display = 'none';
            } 
        }
    })
//---------------------------------------------------- Boton Women's physique -----------------------------------------------------------       
    const botonWomenph = document.getElementById("btnwomenph")
    botonWomenph.addEventListener('click', function() {
                
        btnbb.style.display = "none";
            btnbikini.style.display = "none";
            btnmph.style.display = "none";
            btnwomenph.style.display = "none";
            btnwellness.style.display = "none";
            btnbdf.style.display = "none";
            btnmusc.style.display = "none";

            divEstaturaMPH.style.display = "none";
            divPeso.style.display = "none";
            divEstaturaBB.style.display = "none";

            divEstaturaMuscular.style.display = "none";
            divEstaturaBKN.style.display = "none";
            divEstaturaWell.style.display = "none";
            divEstaturaBdf.style.display = "none";
            divEstaturaWph.style.display = "block";
        })
//---------------------------------------------------- Campo Estatura Women's Physique -----------------------------------------------------------       
    const inputestaturaWph = document.getElementById("estaturawph")
    inputestaturaWph.addEventListener('keyup', function() {
        for (let index = 0; index < checkCategoria.length; index++) {
                
                let pesoInicial = parseInt(checkCategoria[index].dataset.pardesdepeso)
                let pesoFinal = parseInt(checkCategoria[index].dataset.parhastapeso)
                let pesoAtleta = peso.value
    
                let modal = checkCategoria[index].dataset.datamodal
                let division = checkCategoria[index].dataset.datadivision
                let disciplina = checkCategoria[index].dataset.datadisciplina
    
                let edadInicial = parseInt(checkCategoria[index].dataset.pardesdeedad)
                let edadFinal = parseInt(checkCategoria[index].dataset.paredad)
                let edadAtleta = edad
    
                let estaturaInicial = parseInt(checkCategoria[index].dataset.pardesdeestatura)
                let estaturaFinal = parseInt(checkCategoria[index].dataset.parhastaestatura)
                let estaturaAtleta = estaturawph.value
    
                let genero = checkCategoria[index].dataset.genero
                let generoAtleta = sexo.value

                estaturabdf.removeAttribute('name');
                estaturawell.removeAttribute('name');
                estaturabkn.removeAttribute('name');
                estaturamuscular.removeAttribute('name');
                estaturaMPH.removeAttribute('name');
                estaturaBB.removeAttribute('name');
                peso.removeAttribute('name');

                if (estaturaAtleta.length < 3) {
                    divCategoria[index].style.display = 'none';     
                }
                if (estaturaAtleta.length >= 3) {
                    btnPrint.style.display = "block";    
                }

                if (disciplina == "Mixed-pairs") {
                    divCategoria[index].style.display = 'block';
                }

                //----------------------------------------------------  -----------------------------------------------------------
                if (generoAtleta == 'F' && genero == 'F') {
                
                //--------------------------------------------------------- Junior ---------------------------------------------------------------               
                    if (edadJunior < 24 && modal == 'Junior') {
                            if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                               
                                if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                    divCategoria[index].style.display = 'block';
                                }
                                
                                if (!estaturaInicial) {
                                    divCategoria[index].style.display = 'block';
                                }
                            }    
                    }
                //---------------------------------------------------- Master -----------------------------------------------------------
                    if (edad > 34 && modal == 'Master') {
                       
                        if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                            if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                divCategoria[index].style.display = 'block';
                            } 
                            
                            if (!estaturaInicial) {
                                divCategoria[index].style.display = 'block';
                            }
                        } 

                    }
                }

                if (!pesoInicial && !edadInicial && !estaturaInicial && genero == generoAtleta) {
                    divCategoria[index].style.display = 'block';
                }

            if (generoAtleta == 'F' && genero == 'F' && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta && modal == 'Senior') {
                divCategoria[index].style.display = 'block';
            } 

            if (disciplina == "Women's Wellness" || disciplina == "Women's Bodyfitness" || disciplina == "Women's Bikini" || disciplina == "Fit-pairs" || disciplina == "Women’s Acrobatic Fitness" || disciplina == "Women’s Artistic Fitness" || disciplina == "Women’s Fit-Model") {
                divCategoria[index].style.display = 'none';
            } 
 
        }
    })
//---------------------------------------------------- Boton Wellness -----------------------------------------------------------       
    const botonWellness = document.getElementById("btnwellness")
    botonWellness.addEventListener('click', function() {
                
        btnbb.style.display = "none";
            btnbikini.style.display = "none";
            btnmph.style.display = "none";
            btnwomenph.style.display = "none";
            btnwellness.style.display = "none";
            btnbdf.style.display = "none";
            btnmusc.style.display = "none";

            divEstaturaMPH.style.display = "none";
            divPeso.style.display = "none";
            divEstaturaBB.style.display = "none";

            divEstaturaMuscular.style.display = "none";
            divEstaturaBKN.style.display = "none";
            divEstaturaWell.style.display = "block";
            divEstaturaBdf.style.display = "none";
            divEstaturaWph.style.display = "none";
        })
//---------------------------------------------------- Campo Estatura Wellness -----------------------------------------------------------       
    const inputestaturaWell = document.getElementById("estaturawell")
    inputestaturaWell.addEventListener('keyup', function() {
        for (let index = 0; index < checkCategoria.length; index++) {
                
                let pesoInicial = parseInt(checkCategoria[index].dataset.pardesdepeso)
                let pesoFinal = parseInt(checkCategoria[index].dataset.parhastapeso)
                let pesoAtleta = peso.value
    
                let modal = checkCategoria[index].dataset.datamodal
                let division = checkCategoria[index].dataset.datadivision
                let disciplina = checkCategoria[index].dataset.datadisciplina
    
                let edadInicial = parseInt(checkCategoria[index].dataset.pardesdeedad)
                let edadFinal = parseInt(checkCategoria[index].dataset.paredad)
                let edadAtleta = edad
    
                let estaturaInicial = parseInt(checkCategoria[index].dataset.pardesdeestatura)
                let estaturaFinal = parseInt(checkCategoria[index].dataset.parhastaestatura)
                let estaturaAtleta = estaturawell.value
    
                let genero = checkCategoria[index].dataset.genero
                let generoAtleta = sexo.value

                estaturabdf.removeAttribute('name');
                estaturawph.removeAttribute('name');
                estaturabkn.removeAttribute('name');
                estaturamuscular.removeAttribute('name');
                estaturaMPH.removeAttribute('name');
                estaturaBB.removeAttribute('name');
                peso.removeAttribute('name');

                if (estaturaAtleta.length < 3) {
                    divCategoria[index].style.display = 'none';     
                }
                if (estaturaAtleta.length >= 3) {
                    btnPrint.style.display = "block";    
                }
 
                //----------------------------------------------------  -----------------------------------------------------------
                if (generoAtleta == 'F' && genero == 'F') {
                
                //--------------------------------------------------------- Junior ---------------------------------------------------------------               
                    if (edadJunior < 24 && modal == 'Junior') {
             
                            if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                               
                                if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                    divCategoria[index].style.display = 'block';
                                }
                                
                                if (!estaturaInicial) {
                                    divCategoria[index].style.display = 'block';
                                }
                            }    
                    }
                //---------------------------------------------------- Master -----------------------------------------------------------
                    if (edad > 34 && modal == 'Master') {
                       
                        if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                            if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                divCategoria[index].style.display = 'block';
                            } 
                            
                            if (!estaturaInicial) {
                                divCategoria[index].style.display = 'block';
                            }
                        } 

                    }
                }

                if (!pesoInicial && !edadInicial && !estaturaInicial && genero == generoAtleta) {
                    divCategoria[index].style.display = 'block';
                }

            if (generoAtleta == 'F' && genero == 'F' && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta && modal == 'Senior') {
                divCategoria[index].style.display = 'block';
            } 

            if (disciplina == "Women’s Physique" || disciplina == "Women's Bodyfitness" || disciplina == "Women's Bikini" || disciplina == "Fit-pairs" || disciplina == "Mixed-pairs" || disciplina == "Women’s Acrobatic Fitness" || disciplina == "Women’s Artistic Fitness") {
                divCategoria[index].style.display = 'none';
            } 
        }
    })
//---------------------------------------------------- Boton Bodyfitness -----------------------------------------------------------       
    const botonBodyFit = document.getElementById("btnbdf")
    botonBodyFit.addEventListener('click', function() {
                
        btnbb.style.display = "none";
            btnbikini.style.display = "none";
            btnmph.style.display = "none";
            btnwomenph.style.display = "none";
            btnwellness.style.display = "none";
            btnbdf.style.display = "none";
            btnmusc.style.display = "none";

            divEstaturaMPH.style.display = "none";
            divPeso.style.display = "none";
            divEstaturaBB.style.display = "none";

            divEstaturaMuscular.style.display = "none";
            divEstaturaBKN.style.display = "none";
            divEstaturaWell.style.display = "none";
            divEstaturaBdf.style.display = "block";
            divEstaturaWph.style.display = "none";

            
        })
//---------------------------------------------------- Campo Estatura Bodyfitness -----------------------------------------------------------       
  const inputestaturaBdf = document.getElementById("estaturabdf")
  inputestaturaBdf.addEventListener('keyup', function() {
        for (let index = 0; index < checkCategoria.length; index++) {
                
                let pesoInicial = parseInt(checkCategoria[index].dataset.pardesdepeso)
                let pesoFinal = parseInt(checkCategoria[index].dataset.parhastapeso)
                let pesoAtleta = peso.value
    
                let modal = checkCategoria[index].dataset.datamodal
                let division = checkCategoria[index].dataset.datadivision
                let disciplina = checkCategoria[index].dataset.datadisciplina
    
                let edadInicial = parseInt(checkCategoria[index].dataset.pardesdeedad)
                let edadFinal = parseInt(checkCategoria[index].dataset.paredad)
                let edadAtleta = edad
    
                let estaturaInicial = parseInt(checkCategoria[index].dataset.pardesdeestatura)
                let estaturaFinal = parseInt(checkCategoria[index].dataset.parhastaestatura)
                let estaturaAtleta = estaturabdf.value
    
                let genero = checkCategoria[index].dataset.genero
                let generoAtleta = sexo.value

                estaturawell.removeAttribute('name');
                estaturawph.removeAttribute('name');
                estaturabkn.removeAttribute('name');
                estaturamuscular.removeAttribute('name');
                estaturaMPH.removeAttribute('name');
                estaturaBB.removeAttribute('name');
                peso.removeAttribute('name');


                if (estaturaAtleta.length < 3) {
                    divCategoria[index].style.display = 'none';     
                }

                if (estaturaAtleta.length >= 3) {
                    btnPrint.style.display = "block";    
                }
                //----------------------------------------------------  -----------------------------------------------------------
                if (generoAtleta == 'F' && genero == 'F') {
                
                //--------------------------------------------------------- Junior ---------------------------------------------------------------               
                    if (edadJunior < 24 && modal == 'Junior') {
             
                        if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                               
                            if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                divCategoria[index].style.display = 'block';
                            }
                                
                            if (!estaturaInicial) {
                                divCategoria[index].style.display = 'block';
                            }
                        }    
                    }
                //---------------------------------------------------- Master -----------------------------------------------------------
                    if (edad > 34 && modal == 'Master') {
                       
                        if (edadInicial <= edadAtleta && edadFinal >= edadAtleta) {
                            if (estaturaInicial && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta){
                                divCategoria[index].style.display = 'block';
                            } 
                            
                            if (!estaturaInicial) {
                                divCategoria[index].style.display = 'block';
                            }
                        } 

                    }
                }

                if (!pesoInicial && !edadInicial && !estaturaInicial && genero == generoAtleta) {
                    divCategoria[index].style.display = 'block';
                }

            if (generoAtleta == 'F' && genero == 'F' && estaturaInicial < estaturaAtleta && estaturaFinal >= estaturaAtleta && modal == 'Senior') {
                divCategoria[index].style.display = 'block';
            } 

            if (disciplina == "Women’s Physique" || disciplina == "Women's Wellness" || disciplina == "Women's Bikini" || disciplina == "Fit-pairs" || disciplina == "Mixed-pairs" || disciplina == "Women’s Artistic Fitness" || disciplina == "Women’s Fit-Model") {//Women’s Fit-Model
                divCategoria[index].style.display = 'none';
            } 
        }
    })
//---------------------------------------------------- al cargar la pagina -----------------------------------------------------------
    window.addEventListener('load', function () {
        document.getElementById('edad').value = edad; 

        if (sexo.value == 'M') {
            btnbb.style.display = "block";
            btnbikini.style.display = "none";
            btnmph.style.display = "block";
            btnwomenph.style.display = "none";
            btnwellness.style.display = "none";
            btnbdf.style.display = "none";
            btnmusc.style.display = "block";
        }

        if (sexo.value == 'F') {
            btnbb.style.display = "none";
            btnbikini.style.display = "block";
            btnmph.style.display = "none";
            btnwomenph.style.display = "block";
            btnwellness.style.display = "block";
            btnbdf.style.display = "block";
            btnmusc.style.display = "none";
        }
            
    });
//---------------------------------------------------- boton imprimir -----------------------------------------------------------
  
for (let index = 0; index < checkCategoria1.length; index++) {
checkCategoria1[index].addEventListener('click', function() {

if (checkCategoria1[index].checked === true) {
         
           let dato = checkCategoria[index].value;

resultado = document.getElementById('divCatDes');

   datoParrafo = document.createElement('input');
               datoParrafo.value = dato;
               datoParrafo.id = 'datoparrafo' + index;
               datoParrafo.name = 'CategoriaDesc';
               datoParrafo.type = 'text';
               datoParrafo.className = 'border-0 fs-6 fw-bold col-9 mt-0 pt-0 bg-white';
               datoParrafo.readOnly = true;

            resultado.appendChild(datoParrafo);
}

if (checkCategoria1[index].checked === false) {

const idparrafo = "datoparrafo" + index

obtenerparrafos = document.getElementById(idparrafo)
obtenerparrafos.remove();
}

})

}

// const division = document.getElementById('evento')
//    division.addEventListener('keyup', function() {
// const formularioEditar = document.getElementById('formularioEditar')
// const Edad = formularioEditar.elements['Edad'].value
// const Estatura = formularioEditar.elements['Estatura'].value
// const Peso = formularioEditar.elements['Peso'].value

// const Parametros = Peso/Estatura/Edad
//        descParam.value = Parametros
//    })


for (let index = 0; index < checkCategoria1.length; index++) {
   
const printBtn = document.getElementById('btnPrint');
    printBtn.addEventListener('click', async(e) => { 
        // e.preventDefault()
        const hay = checkCategoria1[index].checked
        let modal = checkCategoria[index].dataset.datamodal
        let division = checkCategoria[index].dataset.datadivision
        let disciplina = checkCategoria[index].dataset.datadisciplina

    if (hay === true) {
        if (disciplina == "Men's Bodybuilding" || disciplina == "Men’s Bodybuilding" || disciplina == "Classic Physique" || disciplina == "Men’s Classic Bodybuilding" || disciplina == "Games Classic" || disciplina == "Mixed-pairs") {
        const id = checkCategoria1[index].value
    // });
 const formularioEditar = document.getElementById('formularioEditar')

// formularioEditar.addEventListener('click', async(e) => {
    
    const FechaActual = formularioEditar.elements['FechaActual'].value
    const Cedula = formularioEditar.elements['Cedula'].value
    const Nacimiento = formularioEditar.elements['Nacimiento'].value
    const Edad = formularioEditar.elements['Edad'].value
    const Sexo = formularioEditar.elements['Sexo'].value
    const Sector = formularioEditar.elements['Sector'].value
    const Estatura = formularioEditar.elements['Estatura'].value
    const Peso = formularioEditar.elements['Peso'].value
    const Preparador = formularioEditar.elements['Preparador'].value
    // const Categoria = formularioEditar.elements['Categoria'].value
    const IDFDFF = formularioEditar.elements['IDFDFF'].value
    const Nombre = formularioEditar.elements['Nombre'].value
    // const id = formularioEditar.elements['id'].value
    // const id = checkCategoria1.elements['id'].value
    
    // if (Peso == undefined) {
    //     Peso = 0
    // }
    // if (Estatura == undefined) {
    //     Estatura = 0
    // }
        
    const Parametros = Peso + "kg." + "/" + Estatura + "cm." + "/" + Edad + "años"
       descParam.value = Parametros
   
try {
    const data = await fetch(`/inscripcion/${id}`, {
        method: 'put',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({id, FechaActual, IDFDFF, Nombre, Cedula, Nacimiento, Edad, Sexo, Peso, Estatura, Sector, Preparador})
    })
    const res = await data.json()
    // console.log(res)
    
    if(res.estado){
        // window.location.href = '/inscripcion'
    }else{
        console.log(res)
        
    }
} catch (error) {
    console.log(error)
}

}else{
    const id = checkCategoria1[index].value
    // });
 const formularioEditar = document.getElementById('formularioEditar')

// formularioEditar.addEventListener('click', async(e) => {
    
    const FechaActual = formularioEditar.elements['FechaActual'].value
    const Cedula = formularioEditar.elements['Cedula'].value
    const Nacimiento = formularioEditar.elements['Nacimiento'].value
    const Edad = formularioEditar.elements['Edad'].value
    const Sexo = formularioEditar.elements['Sexo'].value
    const Sector = formularioEditar.elements['Sector'].value
    const Estatura = formularioEditar.elements['Estatura'].value
    // const Peso = formularioEditar.elements['Peso'].value
    const Preparador = formularioEditar.elements['Preparador'].value
    // const Categoria = formularioEditar.elements['Categoria'].value
    const IDFDFF = formularioEditar.elements['IDFDFF'].value
    const Nombre = formularioEditar.elements['Nombre'].value
    // const id = formularioEditar.elements['id'].value
    // const id = checkCategoria1.elements['id'].value
    
    // if (Peso == undefined) {
    //     Peso = 0
    // }
    // if (Estatura == undefined) {
    //     Estatura = 0
    // }
    const Parametros = "(N/A)" + "/" + Estatura + "cm." + "/" + Edad + "años"
       descParam.value = Parametros
    //    descParam.value = Parametros

try {
    const data = await fetch(`/inscripcion/${id}`, {
        method: 'put',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({id, FechaActual, IDFDFF, Nombre, Cedula, Nacimiento, Edad, Sexo, Estatura, Sector, Preparador})
    })
    const res = await data.json()
    // console.log(res)
    
    if(res.estado){
        // window.location.href = '/inscripcion'
    }else{
        console.log(res)
        
    }
} catch (error) {
    console.log(error)
}

}



// print();
    }

});

}


    const printBtn = document.getElementById('btnPrint');
    printBtn.addEventListener('click', function() { 
        print();
        // window.location.href = '/inscripcion'
    });

</script>